import binascii
import hashlib
import itertools
from z3 import * 

filesize = 85
flag = [BitVec(f"b{i}", 85 * 8) for i in range(filesize)]

s = Solver()

# brute force hash check 

# hash.md5(0, filesize) == "b7dc94ca98aa58dabb5404541c812db2"
# hash.crc32(8, 2) == 0x61089c5c 
# hash.crc32(34, 2) == 0x5888fc1b 
# hash.crc32(63, 2) == 0x66715919 
# hash.sha256(14, 2) == "403d5f23d149670348b147a15eeb7010914701a7e99aad2e43f90cfa0325c76f"
# hash.sha256(56, 2) == "593f2d04aab251f60c9e4b8bbc1e05a34e920980ec08351a18459b2bc7dbf2f6"
# hash.md5(0, 2) == "89484b14b36a8d5329426a3d944d2983"
# hash.crc32(78, 2) == 0x7cab8d64 
# hash.md5(76, 2) == "f98ed07a4d5f50f7de1410d905f1477f"
# hash.md5(50, 2) == "657dae0913ee12be6fb2a6f687aae1c7"
# hash.md5(32, 2) == "738a656e8e8ec272ca17cd51e12f558b"

# Define all hash targets and positions
targets = [
    ('crc32',   8,  0x61089c5c),
    ('crc32',   34, 0x5888fc1b),
    ('crc32',   63, 0x66715919),
    ('sha256',  14, "403d5f23d149670348b147a15eeb7010914701a7e99aad2e43f90cfa0325c76f"),
    ('sha256',  56, "593f2d04aab251f60c9e4b8bbc1e05a34e920980ec08351a18459b2bc7dbf2f6"),
    ('md5',     0,  "89484b14b36a8d5329426a3d944d2983"),
    ('crc32',   78, 0x7cab8d64),
    ('md5',     76, "f98ed07a4d5f50f7de1410d905f1477f"),
    ('md5',     50, "657dae0913ee12be6fb2a6f687aae1c7"),
    ('md5',     32, "738a656e8e8ec272ca17cd51e12f558b"),
]

# Choose charset (printable ASCII)
charset = range(32, 127)

# Brute-force
for hash_type, offset, expected in targets:
    # print(f"[*] Brute-forcing {hash_type} at offset {offset}...")

    found = False
    for c1, c2 in itertools.product(charset, repeat=2):
        pair = bytes([c1, c2])

        if hash_type == 'crc32':
            h = binascii.crc32(pair) & 0xffffffff
            if h == expected:
                found = True
        elif hash_type == 'sha256':
            h = hashlib.sha256(pair).hexdigest()
            if h == expected:
                found = True
        elif hash_type == 'md5':
            h = hashlib.md5(pair).hexdigest()
            if h == expected:
                found = True

        if found:
            s.add(flag[offset] == c1)
            s.add(flag[offset + 1] == c2)
            break

    if not found:
        print(f"    [-] No match found at offset {offset}")

# z3 to find flag 

s.add((filesize ^ flag[11]) != 107 )
s.add((flag[55]) & 128 == 0 )
s.add((flag[58]) + 25 == 122 )
s.add((flag[7]) & 128 == 0 )
s.add((flag[48]) % 12 < 12 )
s.add((flag[17]) > 31 )
s.add((flag[68]) > 10 )
s.add((flag[56]) < 155 )
s.add((flag[52] | (flag[53] << 8) | (flag[54] << 16) | (flag[55] << 24)) ^ 425706662 == 1495724241 )
s.add((flag[0]) % 25 < 25 )
s.add((filesize ^ flag[75]) != 25 )
s.add((filesize ^ flag[28]) != 12 )
s.add((flag[35]) < 160 )
s.add((flag[3]) & 128 == 0 )
s.add((flag[56]) & 128 == 0 )
s.add((flag[28]) % 27 < 27 )
s.add((flag[4]) > 30 )
s.add((flag[15]) & 128 == 0 )
s.add((flag[68]) % 19 < 19 )
s.add((flag[19]) < 151 )
s.add((filesize ^ flag[73]) != 17 )
s.add((filesize ^ flag[31]) != 5 )
s.add((flag[38]) % 24 < 24 )
s.add((flag[3]) > 21 )
s.add((flag[54]) & 128 == 0 )
s.add((filesize ^ flag[66]) != 146 )
s.add((flag[17] | (flag[18] << 8) | (flag[19] << 16) | (flag[20] << 24)) - 323157430 == 1412131772 )
s.add((filesize ^ flag[77]) != 22 )
s.add((flag[75]) % 24 < 24 )
s.add((flag[66]) < 133 )
s.add((flag[21]) % 11 < 11 )
s.add((flag[46]) < 154 )
s.add((flag[55]) > 5 )
s.add((flag[36]) + 4 == 72 )
s.add((filesize ^ flag[82]) != 228 )
s.add((filesize ^ flag[13]) != 42 )
s.add((filesize ^ flag[6]) != 39 )
s.add((flag[33]) < 160 )
s.add((filesize ^ flag[55]) != 244 )
s.add((filesize ^ flag[15]) != 205 )
s.add((filesize ^ flag[3]) != 43 )
s.add((filesize ^ flag[54]) != 39 )
s.add((flag[28]) & 128 == 0 )
s.add((flag[10]) < 146 )
s.add((filesize ^ flag[56]) != 246 )
s.add((filesize ^ flag[32]) != 77 )
s.add((flag[73]) > 26 )
s.add((flag[36]) > 11 )
s.add((flag[70]) > 6 )
s.add((filesize ^ flag[33]) != 27 )
s.add((flag[48]) & 128 == 0 )
s.add((filesize ^ flag[74]) != 45 )
s.add((flag[27]) ^ 21 == 40 )
s.add((flag[60]) % 23 < 23 )
s.add((filesize ^ flag[67]) != 63 )
s.add((filesize ^ flag[0]) != 16 )
s.add((flag[51]) % 15 < 15 )
s.add((flag[50]) > 19 )
s.add((flag[27]) < 147 )
s.add((filesize ^ flag[40]) != 230 )
s.add((filesize ^ flag[2]) != 205 )
s.add((flag[79]) % 24 < 24 )
s.add((flag[69]) < 148 )
s.add((flag[16]) & 128 == 0 )
s.add((flag[61]) % 26 < 26 )
s.add((flag[63]) > 31 )
s.add((flag[14]) & 128 == 0 )
s.add((flag[35]) > 1 )
s.add((filesize ^ flag[11]) != 33 )
s.add((flag[52]) < 136 )
s.add((flag[54]) > 15 )
s.add((filesize ^ flag[20]) != 83 )
s.add((flag[43]) > 24 )
s.add((flag[82]) < 152 )
s.add((flag[59] | (flag[60] << 8) | (flag[61] << 16) | (flag[62] << 24)) ^ 512952669 == 1908304943 )
s.add((filesize ^ flag[79]) != 186 )
s.add((filesize ^ flag[83]) != 197 )
s.add((flag[39]) < 134 )
s.add((filesize ^ flag[43]) != 33 )
s.add((flag[72]) > 10 )
s.add((flag[83]) < 134 )
s.add((flag[44]) % 27 < 27 )
s.add((flag[40]) < 131 )
s.add((flag[80]) % 31 < 31 )
s.add((filesize ^ flag[47]) != 11 )
s.add((flag[55]) % 11 < 11 )
s.add((filesize ^ flag[71]) != 3 )
s.add((flag[65]) - 29 == 70 )
s.add((flag[58]) > 30 )
s.add((filesize ^ flag[37]) != 37 )
s.add((flag[60]) < 130 )
s.add((flag[27]) & 128 == 0 )
s.add((flag[3]) < 141 )
s.add((flag[73]) & 128 == 0 )
s.add((filesize ^ flag[70]) != 209 )
s.add((filesize ^ flag[2]) != 54 )
s.add((filesize ^ flag[20]) != 17 )
s.add((flag[33]) > 18 )
s.add((flag[37]) % 19 < 19 )
s.add((filesize ^ flag[62]) != 15 )
s.add((filesize ^ flag[10]) != 44 )
s.add((flag[7]) % 12 < 12 )
s.add((flag[71]) > 19 )
s.add((filesize ^ flag[50]) != 86 )
s.add((flag[45]) ^ 9 == 104 )
s.add((flag[8]) < 133 )
s.add((flag[31]) < 145 )
s.add((flag[14]) > 20 )
s.add((flag[54]) % 25 < 25 )
s.add((filesize ^ flag[49]) != 156 )
s.add((flag[47]) > 13 )
s.add((flag[29]) > 22 )
s.add((flag[14]) % 19 < 19 )
s.add((filesize ^ flag[17]) != 16 )
s.add((filesize ^ flag[12]) != 226 )
s.add((filesize ^ flag[65]) != 28 )
s.add((flag[45]) & 128 == 0 )
s.add((filesize ^ flag[6]) != 129 )
s.add((flag[18]) % 30 < 30 )
s.add((filesize ^ flag[62]) != 246 )
s.add((flag[78]) % 13 < 13 )
s.add((flag[36]) & 128 == 0 )
s.add((flag[10]) & 128 == 0 )
s.add((flag[62]) > 1 )
s.add((flag[33]) & 128 == 0 )
s.add((filesize ^ flag[83]) != 31 )
s.add((flag[83]) % 21 < 21 )
s.add((flag[11]) > 18 )
s.add((flag[80]) < 143 )
s.add((flag[81]) % 14 < 14 )
s.add((flag[43]) < 160 )
s.add((flag[1]) > 19 )
s.add((flag[42]) % 17 < 17 )
s.add((flag[44]) < 147 )
s.add((filesize ^ flag[63]) != 34 )
s.add((filesize ^ flag[44]) != 17 )
s.add((flag[28] | (flag[29] << 8) | (flag[30] << 16) | (flag[31] << 24)) - 419186860 == 959764852 )
s.add((flag[74]) + 11 == 116 )
s.add((flag[48]) < 136 )
s.add((flag[47]) < 142 )
s.add((flag[58]) < 146 )
s.add((filesize ^ flag[71]) != 128 )
s.add((flag[45]) < 136 )
s.add((flag[31]) % 17 < 17 )
s.add((flag[43]) & 128 == 0 )
s.add((filesize ^ flag[43]) != 251 )
s.add((flag[65]) > 1 )
s.add((flag[24]) & 128 == 0 )
s.add((flag[37]) < 139 )
s.add((filesize ^ flag[28]) != 238 )
s.add((flag[78]) & 128 == 0 )
s.add((filesize ^ flag[13]) != 219 )
s.add((flag[19]) % 30 < 30  )
s.add((filesize ^ flag[53]) != 243 )
s.add((flag[81]) & 128 == 0 )
s.add((flag[46]) % 28 < 28 )
s.add((filesize ^ flag[65]) != 215 )
s.add((filesize ^ flag[0]) != 41 )
s.add((flag[84]) < 129 )
s.add((flag[60]) & 128 == 0 )
s.add((flag[20]) > 1 )
s.add((flag[2]) % 28 < 28 )
s.add((flag[58]) % 14 < 14 )
s.add((flag[34]) & 128 == 0 )
s.add((flag[21]) & 128 == 0 )
s.add((flag[84]) % 18 < 18 )
s.add((flag[74]) % 10 < 10 )
s.add((flag[9]) < 151 )
s.add((flag[73]) % 23 < 23 )
s.add((filesize ^ flag[39]) != 49 )
s.add((flag[4]) % 17 < 17 )
s.add((filesize ^ flag[60]) != 142 )
s.add((filesize ^ flag[69]) != 30 )
s.add((flag[30]) > 6 )
s.add((flag[65]) & 128 == 0 )
s.add((flag[39]) % 11 < 11 )
s.add((flag[13]) % 27 < 27 )
s.add((flag[17]) % 11 < 11 )
s.add((flag[56]) % 26 < 26 )
s.add((flag[29]) < 157 )
s.add((flag[57]) & 128 == 0 )
s.add((filesize ^ flag[29]) != 37 )
s.add((flag[77]) > 5 )
s.add((filesize ^ flag[16]) != 144 )
s.add((flag[37]) & 128 == 0 )
s.add((filesize ^ flag[25]) != 47 )
s.add((flag[67]) & 128 == 0 )
s.add((filesize ^ flag[24]) != 94 )
s.add((flag[68]) < 138 )
s.add((flag[57]) < 138 )
s.add((filesize ^ flag[27]) != 43 )
s.add((filesize ^ flag[30]) != 18 )
s.add((filesize ^ flag[59]) != 13 )
s.add((flag[27]) % 26 < 26 )
s.add((flag[56]) > 8 )
s.add((flag[69]) & 128 == 0 )
s.add((flag[18]) & 128 == 0 )
s.add((flag[64]) < 154 )
s.add((flag[76]) & 128 == 0 )
s.add((flag[71]) % 28 < 28 )
s.add((filesize ^ flag[84]) != 3 )
s.add((filesize ^ flag[38]) != 84 )
s.add((flag[32]) < 140 )
s.add((filesize ^ flag[42]) != 91 )
s.add((flag[40]) > 15 )
s.add((flag[27]) > 23 )
s.add((flag[6]) % 12 < 12 )
s.add((flag[10]) % 10 < 10 )
s.add((flag[8]) % 21 < 21 )
s.add((filesize ^ flag[18]) != 234 )
s.add((flag[68]) & 128 == 0 )
s.add((flag[7]) < 131 )
s.add((flag[72]) < 134 )
s.add((flag[16]) > 25 )
s.add((flag[12]) % 23 < 23 )
s.add((flag[41]) % 27 < 27 )
s.add((flag[1]) % 17 < 17 )
s.add((flag[26]) > 31  )
s.add((flag[65]) < 149 )
s.add((filesize ^ flag[51]) != 0 )
s.add((flag[66]) > 30 )
s.add((filesize ^ flag[68]) != 8 )
s.add((flag[25]) % 23 < 23 )
s.add((flag[1]) & 128 == 0 )
s.add((filesize ^ flag[81]) != 7 )
s.add((flag[36]) % 22 < 22 )
s.add((flag[24]) < 148 )
s.add((flag[12]) < 147 )
s.add((flag[74]) < 152 )
s.add((filesize ^ flag[21]) != 27 )
s.add((filesize ^ flag[23]) != 18 )
s.add((flag[38]) & 128 == 0 )
s.add((flag[26]) % 25 < 25 )
s.add((filesize ^ flag[19]) != 31 )
s.add((flag[82]) > 3 )
s.add((flag[5]) % 27 < 27 )
s.add((flag[5]) & 128 == 0 )
s.add((flag[75]) - 30 == 86 )
s.add((flag[54]) < 152 )
s.add((flag[75]) < 142 )
s.add((flag[20]) % 28 < 28 )
s.add((flag[30]) & 128 == 0 )
s.add((flag[66] | (flag[67] << 8) | (flag[68] << 16) | (flag[69] << 24)) ^ 310886682 == 849718389 )
s.add((flag[64]) % 24 < 24 )
s.add((flag[10] | (flag[11] << 8) | (flag[12] << 16) | (flag[13] << 24)) + 383041523 == 2448764514 )
s.add((flag[79]) & 128 == 0 )
s.add((filesize ^ flag[59]) != 194 )
s.add((flag[61]) & 128 == 0 )
s.add((flag[70]) < 139 )
s.add((flag[77]) & 128 == 0 )
s.add((flag[13]) & 128 == 0 )
s.add((flag[21]) < 138 )
s.add((filesize ^ flag[46]) != 186 )
s.add((flag[43]) % 26 < 26 )
s.add((flag[61]) < 160 )
s.add((filesize ^ flag[34]) != 39 )
s.add((flag[6]) > 6 )
s.add((flag[35]) & 128 == 0 )
s.add((flag[23]) < 141 )
s.add((filesize ^ flag[82]) != 32 )
s.add((filesize ^ flag[48]) != 29 )
s.add((flag[59]) & 128 == 0 )
s.add((flag[40]) % 19 < 19 )
s.add((filesize ^ flag[39]) != 18 )
s.add((filesize ^ flag[45]) != 146 )
s.add((flag[80]) & 128 == 0 )
s.add((flag[16]) < 134 )
s.add((flag[74]) > 1 )
s.add((flag[23]) & 128 == 0 )
s.add((flag[32]) & 128 == 0 )
s.add((filesize ^ flag[47]) != 119 )
s.add((filesize ^ flag[63]) != 135 )
s.add((flag[64]) > 27 )
s.add((flag[37] | (flag[38] << 8) | (flag[39] << 16) | (flag[40] << 24)) + 367943707 == 1228527996 )
s.add((flag[82]) % 28 < 28 )
s.add((flag[32]) > 28 )
s.add((filesize ^ flag[24]) != 217 )
s.add((flag[53]) < 144 )
s.add((flag[29]) & 128 == 0 )
s.add((flag[22] | (flag[23] << 8) | (flag[24] << 16) | (flag[25] << 24)) ^ 372102464 == 1879700858 )
s.add((flag[52]) % 23 < 23 )
s.add((filesize ^ flag[76]) != 88 )
s.add((filesize ^ flag[55]) != 17 )
s.add((flag[26]) & 128 == 0 )
s.add((flag[51]) > 7 )
s.add((flag[12]) > 19 )
s.add((filesize ^ flag[14]) != 99 )
s.add((filesize ^ flag[37]) != 141 )
s.add((filesize ^ flag[14]) != 161 )
s.add((flag[45]) % 17 < 17 )
s.add((flag[33]) % 25 < 25 )
s.add((filesize ^ flag[67]) != 55 )
s.add((filesize ^ flag[53]) != 19 )
s.add((flag[30]) < 131 )
s.add((flag[0]) & 128 == 0 )
s.add((flag[66]) & 128 == 0 )
s.add((flag[41]) > 5 )
s.add((flag[71]) & 128 == 0 )
s.add((flag[29]) % 12 < 12 )
s.add((flag[4]) < 139 )
s.add((flag[77]) < 154 )
s.add((filesize ^ flag[12]) != 116 )
s.add((flag[39]) > 7 )
s.add((flag[75]) & 128 == 0 )
s.add((flag[78]) > 24 )
s.add((flag[69]) > 25 )
s.add((flag[2]) + 11 == 119 )
s.add((flag[15]) < 156 )
s.add((filesize ^ flag[69]) != 241 )
s.add((filesize ^ flag[35]) != 18 )
s.add((filesize ^ flag[17]) != 208  )
s.add((filesize ^ flag[4]) != 23 )
s.add((flag[15]) % 16 < 16 )
s.add((filesize ^ flag[75]) != 35 )
s.add((flag[46] | (flag[47] << 8) | (flag[48] << 16) | (flag[49] << 24)) - 412326611 == 1503714457 )
s.add((flag[11]) % 27 < 27 )
s.add((flag[83]) & 128 == 0 )
s.add((filesize ^ flag[26]) != 161 )
s.add((flag[49]) % 13 < 13 )
s.add((filesize ^ flag[18]) != 33 )
s.add((flag[6]) < 155 )
s.add((flag[41]) < 140 )
s.add((filesize ^ flag[68]) != 135 )
s.add((filesize ^ flag[9]) != 5 )
s.add((flag[9]) & 128 == 0 )
s.add((filesize ^ flag[36]) != 95 )
s.add((flag[7]) > 18 )
s.add((filesize ^ flag[23]) != 242 )
s.add((flag[62]) < 146 )
s.add((flag[49]) & 128 == 0 )
s.add((flag[62]) & 128 == 0 )
s.add((flag[4]) & 128 == 0 )
s.add((filesize ^ flag[58]) != 12 )
s.add((flag[72]) & 128 == 0 )
s.add((flag[18]) > 13 )
s.add((filesize ^ flag[42]) != 1 )
s.add((flag[59]) % 23 < 23 )
s.add((flag[53]) & 128 == 0 )
s.add((filesize ^ flag[78]) != 163 )
s.add((flag[60]) > 14 )
s.add((flag[47]) % 18 < 18 )
s.add((flag[79]) > 31 )
s.add((flag[22]) < 152 )
s.add((filesize ^ flag[64]) != 50 )
s.add((filesize ^ flag[19]) != 222 )
s.add((flag[81]) < 131 )
s.add((flag[7]) - 15 == 82 )
s.add((filesize ^ flag[51]) != 204 )
s.add((flag[28]) > 27 )
s.add((flag[70] | (flag[71] << 8) | (flag[72] << 16) | (flag[73] << 24)) + 349203301 == 2034162376 )
s.add((filesize ^ flag[61]) != 94 )
s.add((flag[76]) > 2 )
s.add((filesize ^ flag[77]) != 223 )
s.add((flag[19]) > 4 )
s.add((flag[80]) > 2 )
s.add((filesize ^ flag[35]) != 120 )
s.add((filesize ^ flag[22]) != 31 )
s.add((flag[10]) > 9 )
s.add((flag[22]) > 20 )
s.add((flag[38]) < 135 )
s.add((filesize ^ flag[10]) != 205 )
s.add((flag[25]) & 128 == 0 )
s.add((flag[13]) < 147 )
s.add((flag[42]) & 128 == 0  )
s.add((filesize ^ flag[48]) != 99 )
s.add((filesize ^ flag[16]) != 7 )
s.add((flag[11]) < 154 )
s.add((filesize ^ flag[76]) != 30 )
s.add((flag[30]) % 15 < 15 )
s.add((filesize ^ flag[74]) != 193 )
s.add((filesize ^ flag[52]) != 22 )
s.add((filesize ^ flag[36]) != 6 )
s.add((flag[22]) % 22 < 22 )
s.add((flag[44]) & 128 == 0 )
s.add((flag[50]) & 128 == 0 )
s.add((filesize ^ flag[25]) != 224 )
s.add((flag[15]) > 26 )
s.add((filesize ^ flag[60]) != 43 )
s.add((flag[22]) & 128 == 0 )
s.add((flag[82]) & 128 == 0 )
s.add((flag[80] | (flag[81] << 8) | (flag[82] << 16) | (flag[83] << 24)) - 473886976 == 69677856 )
s.add((flag[75]) > 30 )
s.add((flag[32]) % 17 < 17 )
s.add((filesize ^ flag[15]) != 27 )
s.add((flag[67]) % 16 < 16 )
s.add((flag[23]) > 2 )
s.add((flag[62]) % 13 < 13 )
s.add((flag[34]) < 138 )
s.add((filesize ^ flag[31]) != 32 )
s.add((flag[72]) % 14 < 14 )
s.add((filesize ^ flag[81]) != 242 )
s.add((filesize ^ flag[54]) != 141 )
s.add((flag[63]) & 128 == 0 )
s.add((flag[0]) < 129 )
s.add((flag[70]) % 21 < 21 )
s.add((flag[8]) & 128 == 0 )
s.add((flag[61]) > 12 )
s.add((flag[24]) > 22 )
s.add((flag[53]) % 23 < 23 )
s.add((flag[46]) & 128 == 0 )
s.add((flag[24]) % 26 < 26 )
s.add((flag[3] | (flag[4] << 8) | (flag[5] << 16) | (flag[6] << 24)) ^ 298697263 == 2108416586 )
s.add((flag[21]) - 21 == 94 )
s.add((flag[67]) < 144 )
s.add((flag[48]) > 15 )
s.add((flag[37]) > 16 )
s.add((flag[42]) < 157 )
s.add((flag[16]) ^ 7 == 115 )
s.add((flag[13]) > 21 )
s.add((filesize ^ flag[45]) != 19 )
s.add((flag[47]) & 128 == 0 )
s.add((filesize ^ flag[80]) != 56 )
s.add((filesize ^ flag[78]) != 6 )
s.add((flag[76]) % 24 < 24 )
s.add((flag[73]) < 136 )
s.add((filesize ^ flag[52]) != 238 )
s.add((flag[50]) % 11 < 11 )
s.add((filesize ^ flag[7]) != 15 )
s.add((filesize ^ flag[66]) != 51 )
s.add((flag[59]) > 4 )
s.add((flag[46]) > 22 )
s.add((filesize ^ flag[3]) != 147 )
s.add((flag[63]) % 30 < 30 )
s.add((flag[36]) < 146 )
s.add((flag[26]) < 132 )
s.add((flag[6]) & 128 == 0 )
s.add((filesize ^ flag[30]) != 249 )
s.add((flag[41] | (flag[42] << 8) | (flag[43] << 16) | (flag[44] << 24)) + 404880684 == 1699114335 )
s.add((filesize ^ flag[5]) != 243 )
s.add((flag[70]) & 128 == 0 )
s.add((flag[9]) % 22 < 22 )
s.add((flag[59]) < 141 )
s.add((filesize ^ flag[79]) != 104 )
s.add((filesize ^ flag[5]) != 43 )
s.add((filesize ^ flag[72]) != 219 )
s.add((flag[52]) > 25 )
s.add((flag[74]) & 128 == 0 )
s.add((flag[28]) < 160 )
s.add((flag[51]) & 128 == 0  )
s.add((flag[83]) > 16 )
s.add((flag[31]) > 7 )
s.add((flag[84]) & 128 == 0 )
s.add((filesize ^ flag[46]) != 18 )
s.add((flag[2]) > 20 )
s.add((flag[5]) < 158 )
s.add((filesize ^ flag[32]) != 30 )
s.add((filesize ^ flag[50]) != 219 )
s.add((flag[26]) - 7 == 25 )
s.add((flag[53]) > 24 )
s.add((flag[77]) % 24 < 24 )
s.add((flag[3]) % 13 < 13 )
s.add((filesize ^ flag[9]) != 164 )
s.add((filesize ^ flag[80]) != 236 )
s.add((flag[65]) % 22 < 22 )
s.add((filesize ^ flag[84]) != 231 )
s.add((filesize ^ flag[49]) != 10 )
s.add((flag[67]) > 27 )
s.add((flag[34]) % 19 < 19 )
s.add((flag[64]) & 128 == 0 )
s.add((filesize ^ flag[27]) != 244 )
s.add((flag[12]) & 128 == 0 )
s.add((flag[51]) < 139 )
s.add((flag[35]) % 15 < 15 )
s.add((flag[5]) > 14 )
s.add((filesize ^ flag[34]) != 115 )
s.add((filesize ^ flag[38]) != 8 )
s.add((filesize ^ flag[72]) != 37 )
s.add((flag[20]) & 128 == 0 )
s.add((flag[17]) < 150 )
s.add((filesize ^ flag[70]) != 41 )
s.add((flag[66]) % 16 < 16 )
s.add((flag[17]) & 128 == 0 )
s.add((flag[19]) & 128 == 0 )
s.add((filesize ^ flag[33]) != 157 )
s.add((flag[21]) > 7 )
s.add((flag[58]) & 128 == 0 )
s.add((flag[71]) < 130 )
s.add((flag[41]) & 128 == 0 )
s.add((flag[57]) > 11  )
s.add((filesize ^ flag[8]) != 2 )
s.add((filesize ^ flag[57]) != 186 )
s.add((flag[11]) & 128 == 0 )
s.add((flag[2]) < 147 )
s.add((flag[23]) % 16 < 16 )
s.add((flag[78]) < 141 )
s.add((flag[38]) > 18 )
s.add((filesize ^ flag[41]) != 233 )
s.add((flag[18]) < 137 )
s.add((flag[40]) & 128 == 0 )
s.add((filesize ^ flag[21]) != 188 )
s.add((filesize ^ flag[57]) != 14 )
s.add((filesize ^ flag[4]) != 253 )
s.add((flag[14]) < 153 )
s.add((flag[31]) & 128 == 0 )
s.add((flag[81]) > 11 )
s.add((flag[2]) & 128 == 0 )
s.add((filesize ^ flag[22]) != 191 )
s.add((flag[44]) > 5 )
s.add((flag[84]) + 3 == 128 )
s.add((flag[20]) < 135 )
s.add((filesize ^ flag[73]) != 61 )
s.add((filesize ^ flag[26]) != 44 )
s.add((flag[1]) < 158 )
s.add((filesize ^ flag[29]) != 158 )
s.add((flag[49]) < 129 )
s.add((filesize ^ flag[64]) != 158 )
s.add((flag[25]) < 154 )
s.add((flag[63]) < 129 )
s.add((flag[84]) > 26 )
s.add((flag[39]) & 128 == 0 )
s.add((flag[25]) > 27 )
s.add((flag[49]) > 27 )
s.add((flag[9]) > 23 )
s.add((filesize ^ flag[7]) != 221 )
s.add((flag[50]) < 138 )
s.add((flag[76]) < 156 )
s.add((filesize ^ flag[61]) != 239 )
s.add((flag[57]) % 27 < 27 )
s.add((filesize ^ flag[8]) != 107 )
s.add((flag[79]) < 146 )
s.add((filesize ^ flag[40]) != 49 )
s.add((flag[0]) > 30 )
s.add((flag[45]) > 17 )
s.add((flag[16]) % 31 < 31 )
s.add((filesize ^ flag[1]) != 232 )
s.add((filesize ^ flag[56]) != 22 )
s.add((flag[42]) > 3 )
s.add((flag[52]) & 128 == 0 )
s.add((flag[69]) % 30 < 30 )
s.add((flag[55]) < 153 )
s.add((filesize ^ flag[41]) != 74 )
s.add((filesize ^ flag[1]) != 0 )
s.add((filesize ^ flag[44]) != 96 )
s.add((filesize ^ flag[58]) != 77 )
s.add((flag[34]) > 18 )
s.add((flag[8]) > 3)

if (s.check() == sat):
    res = bytearray()
    for b in flag:
        res.append(s.model()[b].as_long())
    print(res)